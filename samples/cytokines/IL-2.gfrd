; eGFRD accuracy test for 2D and 3D diffusing species

[Variables]
; TODO: swap for actual values
r = 1e-9                               ; m
r_2 = 1e-9                             ; m
r_2RA = 1e-9                           ; m
r_2RB = 1e-9                           ; m
r_2RG = 1e-9                           ; m
D_3D = 1e-12                           ; m^2 s^-1
D_2D = 1e-13                           ; m^2 s^-1
sigma = 2 * r                          ; m
k_D_3D = 4 * pi * sigma * D_3D         ; m^3 s^-1
k_D_2D = 4 * pi * sigma * D_2D         ; m^3 s^-1

; Changed by parameter sweep of cluster run
Conc_IL = 0.1e-12                      ; Concentration of interleukins, mol liter^-1
N_IL = 1                               ; Particles of interleukin in simulation
N_R_PC = 5000                          ; Full-complex receptors per cell
T_CR = 4e-6                            ; T cell radius, m
T_CS = 4 * pi * T_CR^2                 ; T cell surface area, m^2

; Static parameters
seed = 0xdead1eaf
cnfile = $'copynumbers.bin'            ; copy number output file
sfile = $'simstate.bin'                ; name of simulator state dump file
N_A = 6.022e23                         ; Avogadro's constant
V = N_IL / (Conc_IL * N_A)             ; Volume necessary to have exactly N_IL interleukin particles in the simulation, liter
N_T_PV = 2e9 * V                       ; Number of T-cells per volume, https://assets.thermofisher.com/TFS-Assets/LSG/brochures/I-076357%20cell%20count%20table%20topp_WEB.pdf
World_size = (1e-3 * V) ^ (1/3)        ; Liter to cube-length in meter
N_R_PM = N_R_PC / (T_CS * N_T_PV)      ; Full-complex receptors per m^2
;N_R = N_R_PM * (World_size^2)          ; Full-complex receptors in simulation
N_R = 20          ; Full-complex receptors in simulation

[World]
;Matrix = 8
Size = World_size                      ; m

[Structure]
Name = plane
Type = PlanarSurface
Position = (0.5 * World_size, 0, 0.5 * World_size)
Vx = (1,0,0)
Vy = (0,0,1)
Lx = 0.6 * World_size
Ly = 0.6 * World_size

[SpeciesType]
Name = IL_2
r = r                               ; m
D = D_3D                            ; m^2*s^-1

[SpeciesType]
Name = IL_2RA
Structure = plane
r = r                               ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2RB
Structure = plane
r = r                               ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2RA_2RB
Structure = plane
r = r                               ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2RG
Structure = plane
r = r                               ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2_2RA
Structure = plane
r = 2*r                             ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2_2RB
Structure = plane
r = 2*r                             ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2_2RA_2RB
Structure = plane
r = 3*r                             ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2_2RB_2RG
Structure = plane
r = 3*r                             ; m
D = D_2D                             ; m^2*s^-1

[SpeciesType]
Name = IL_2_2RA_2RB_2RG
Structure = plane
r = 4*r                             ; m
D = D_2D                             ; m^2*s^-1

; v1
[ReactionRule]
Rule = IL_2 + IL_2RA <=> IL_2_2RA
ka = k_D_2D + k_D_3D
kd = (10.4e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v2
[ReactionRule]
Rule = IL_2_2RA + IL_2RB <=> IL_2_2RA_2RB
ka = k_D_2D + k_D_2D
kd = (62.5e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v3
[ReactionRule]
Rule = IL_2_2RA_2RB + IL_2RG <=> IL_2_2RA_2RB_2RG
ka = k_D_2D + k_D_2D
kd = (11.7e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v4
[ReactionRule]
Rule = IL_2RA + IL_2RB <=> IL_2RA_2RB
ka = k_D_2D + k_D_2D
kd = (231.0e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v5
[ReactionRule]
Rule = IL_2 + IL_2RA_2RB <=> IL_2_2RA_2RB
ka = k_D_2D + k_D_3D
kd = (2.8e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v6
[ReactionRule]
Rule = IL_2 + IL_2RB <=> IL_2_2RB
ka = k_D_2D + k_D_3D
kd = (144.1e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v7
[ReactionRule]
Rule = IL_2_2RB + IL_2RG <=> IL_2_2RB_2RG
ka = k_D_2D + k_D_2D
kd = (1.5e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

; v8
[ReactionRule]
Rule = IL_2_2RB_2RG + IL_2RA <=> IL_2_2RA_2RB_2RG
ka = k_D_2D + k_D_2D
kd = (66.3e-9 * N_A * 1000.0) * k_D_2D + k_D_3D         ; (K_d * ka), s^-1

[Particles]
IL_2 = N_IL
IL_2RA = N_R
IL_2RB = N_R
IL_2RG = N_R

[Progress]
Width = 20

[CopyNumbers]
Interval = 0.1
Type = average
;File = $cnfile

[Simulator]
Seed = seed
PrepareTime = 10                        ; seconds
EndTime = 100.0                         ; seconds
MaintenanceFile = $sfile

